
#基本语法

##注释

1. 单行注释

    连续两个减号"--"表示注释的开始，一直延续到行末为止。相当于C++语言中的"//"
1. 多行注释

    --[["表示注释开始，并且一直延续到"]]--为止。这种注释相当于C语言中的"/*…*/"。在注释当中，--[[和]]--是可以嵌套的

    

##Hello world

    print("Hello world")

----

##逻辑语句

1. 条件控制

    `if 条件 then ... elseif 条件 then ... else ... end`
 
1. While循环

    `while 条件 do ... end`

1. Repeat循环

    `Repeat ... until 条件`

1. For循环

    `for 变量 = 初值, 终点值, 步进 do ... end`

1. For循环

    `for 变量1, 变量2, ..., 变量N in 表或枚举函数 do ... end`

----

- for的循环变量总是只作用于for的局部变量，你也可以省略步进值，这时候，for循环会使用1作为步进值。
- 你可以用break来中止一个循环

----

##与C, Basic语言的不同

- 语句块

　　语句块在C++中是用"{"和"}"括起来的，在Lua中，它是用do 和 end 括起来的。比如：
    　　do print("Hello") end
　　你可以在 函数 中和 语句块 中定局部变量。

- 赋值语句

　　赋值语句在Lua被强化了。它可以同时给多个变量赋值。
　　例如：
    　　a,b,c,d=1,2,3,4
　　甚至是：
    　　a,b=b,a -- 多么方便的交换变量功能啊。
　　在默认情况下，变量总是认为是全局的。假如你要定义局部变量，则在第一次赋值的时候，需要用local说明。比如：
    　　local a,b,c = 1,2,3 -- a,b,c都是局部变量

----

- 数值运算
    和C语言一样，支持 +, -, *, /。但Lua还多了一个"^"。这表示指数乘方运算。比如2^3 结果为8, 2^4结果为16。
    连接两个字符串，可以用".."运处符。如：
　　　　"This a " .. "string." -- 等于 "this a string"

　　．比较运算
　　　　< > <= >= == ~=
　　　　分别表示 小于，大于，不大于，不小于，相等，不相等
　　　　所有这些操作符总是返回true或false。

****




#安装

    curl -R -O http://www.lua.org/ftp/lua-5.3.2.tar.gz
    tar zxf lua-5.3.2.tar.gz
    cd lua-5.3.2
    make linux test


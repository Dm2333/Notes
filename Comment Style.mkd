
#Doxygen风格注释

1. 行间注释：注释语句不与程序源码出现在同一行，主要用于注释头文件中出现的结构体 (struct)、枚举 (enum)、联合 (uion) 等数据类型，以及程序接口的功能与使用约定；

    

##文件头

    /*! 
    * \file Ctext.h 
    * \brief 概述  
    *  
    *详细概述  
    *  
    * \author 作者名字 
    * \version 版本号(maj.min，主版本.分版本格式)  
    * \date 日期  
    */  

----

    /*! 
    \file Ctext.h 
    \brief 概述  
    详细概述  
    \author 作者,包含email等  
    \version 版本号(maj.min，主版本.分版本格式)  
    \date 日期  
    */  

----

##命名空间

    /// \brief 命名空间的简单概述   
    ///   
    ///命名空间的详细概述  
    namespace text  
    {  
     ……  
    }  

----

##类说明

    /// \brief Ctext的doxygen测试  
    ///  
    /// 作doxygen测试用(详细描述)
    class Ctext  
    {  
    }  

----

##属性的注释

    /// 数值属性.
    @property (nonatomic,assign) NSInteger num;

----

    /**
     * @brief 字符串属性.
     *
     * 属性的详细描述.
     */
    @property (nonatomic,strong) NSString* str;

----

##函数注释原则

函数详细注释位于头文件，cpp文件只对函数做简明注释

cpp文件不做///的注释，否则会和头文件重叠

###函数简要说明

    /// \brief 函数简要说明-测试函数  
    /// \param n1 参数1  
    /// \param c2 参数2  
    /// \return 返回说明  
    bool text(int n1,Ctext c2);

----

###函数简要说明+详细说明

    /// \brief 函数简要说明-测试函数  
    ///   
    /// 函数详细说明，这里写函数的详细说明信息，说明可以换行  
    /// ，如这里所示，同时需要注意的是详细说明和简要说明之间必须空一行  
    /// ，详细说明之前不需要任何标识符  
    /// \param n1 参数1说明  
    /// \param c2 参数2说明  
    /// \return 返回说明  
    bool text2(int n1,Ctext c2);  

----

###不带简要说明的函数标注

    /// 函数说明-测试函数  
    ///   
    /// 函数详细说明，这里写函数的详细说明信息，说明可以换行  
    /// ，如这里所示，同时需要注意的是详细说明和简要说明之间必须空一行  
    /// ，详细说明之前不需要任何标识符  
    /// \param n1 参数1说明  
    /// \param c2 参数2说明  
    /// \return 返回说明  
    bool text3(int n1,Ctext c2);  

----

###带参见的写法

    /// \brief 函数说明-测试函数4  
    /// \param n1 参数1说明  
    /// \param c2 参数2说明  
    /// \return 返回说明  
    /// \see text3 text2 text  
    bool text4(int n1,Ctext c2); 

----

##变量注释

    int m_a;     ///< 成员变量1m_a说明  
    double m_b; ///< 成员变量2m_b说明  
      
    /// \brief 成员变量m_c简要说明  
    ///  
    /// 成员变量m_c的详细说明，这里可以对变量进行  
    ///详细的说明和描述，具体方法和函数的标注是一样的  
    float m_c;  

> 如果变量需要详细说明的可已按照m_c的写法写，注意，m_b和m_c之间一定需要空行，否则会导致m_b的简述消失

----

##枚举

    /// \brief xxx枚举变量的简要说明  
    ///  
    /// xxx枚举变量的详细说明--枚举变量的详细说明和函数的详细说明  
    ///的写法是一致的。每个枚举变量下可以进行单独说明  
    enum{  
        em_1,///< 枚举值1的说明  
        em_2,///< 枚举值2的说明  
        em_3 ///< 枚举值3的说明  
    }; 

----

##行尾注释

/**< 行尾注释1. appledoc不支持会变为下一项的注释, doxygen 支持, 根据英文句号自动切分简要描述与详细描述. */
/*!< 行尾注释2. appledoc不支持会变为下一项的注释, doxygen 支持, 会全部当作详细描述, 而缺少简要描述. */
///< 行尾注释3. appledoc不支持会变为下一项的注释, doxygen 支持.
//!< 行尾注释4. appledoc不支持会会忽略, doxygen 支持.

----

##完整示例

    /*! 
    * \file Ctext.h 
    * \brief 概述  
    *  
    *详细概述  
    *  
    * \author 作者,包含email等  
    * \version 版本号(maj.min，主版本.分版本格式)  
    * \date 日期  
    */  
      
    #pragma once  
    /// \brief 命名空间的简单概述   
    ///   
    ///命名空间的详细概述  
    namespace text  
    {  
      
    }  
      
    /// \brief Ctext的doxygen测试  
    ///  
    /// 作doxygen测试用  
    class Ctext  
    {  
    public:  
        Ctext(void);  
        ~Ctext(void);  
        /// \brief 函数简要说明-测试函数  
        /// \param n1 参数1说明  
        /// \param c2 参数2说明  
        ///    \return 返回说明  
        bool text(int n1,Ctext c2);  
        /// \brief 函数简要说明-测试函数  
        ///   
        /// 函数详细说明，这里写函数的详细说明信息，说明可以换行  
        /// ，如这里所示，同时需要注意的是详细说明和简要说明之间必须空一行  
        /// ，详细说明之前不需要任何标识符  
        /// \param n1 参数1说明  
        /// \param c2 参数2说明  
        ///    \return 返回说明  
        bool text2(int n1,Ctext c2);  
        /// 函数说明-测试函数  
        ///   
        /// 函数详细说明，这里写函数的详细说明信息，说明可以换行  
        /// ，如这里所示，同时需要注意的是详细说明和简要说明之间必须空一行  
        /// ，详细说明之前不需要任何标识符  
        /// \param n1 参数1说明  
        /// \param c2 参数2说明  
        ///    \return 返回说明  
        bool text3(int n1,Ctext c2);  
        /// \brief 函数说明-测试函数4  
        /// \param n1 参数1说明  
        /// \param c2 参数2说明  
        ///    \return 返回说明  
        /// \see text3 text2 text  
        bool text4(int n1,Ctext c2);  
      
        int m_a;     ///< 成员变量1m_a说明  
        double m_b; ///< 成员变量2m_b说明  
      
        /// \brief 成员变量m_c简要说明  
        ///  
        /// 成员变量m_c的详细说明，这里可以对变量进行  
        ///详细的说明和描述，具体方法和函数的标注是一样的  
        float m_c;  
      
        /// \brief xxx枚举变量的简要说明  
        ///  
        /// xxx枚举变量的详细说明--枚举变量的详细说明和函数的详细说明  
        ///的写法是一致的。每个枚举变量下可以进行单独说明  
        enum{  
            em_1,///< 枚举值1的说明  
            em_2,///< 枚举值2的说明  
            em_3 ///< 枚举值3的说明  
        };  
    };  

****


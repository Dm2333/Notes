
#自适应安全架构

从资产清点, 分析风险, 预测路径
资产一直在变化, 风险变化

路径, 策略随之而改变
自适应跟随这变化

#产品功能

1. 持续的风险控制

    把安全风险控制在很低的风险之下.

    > 安全是一个管理问题
    > 安全是一个过程

    必要条件:
    1. 清晰企业资产         analyse

        过去, 纯人力, 依靠扫描器, 可能不到位
        现在, 每天, 覆盖全面

    1. 当前有什么风险存在   analyse
    1. 定制安全策略 build
    1. 根据安全策略持续性监控   monitor

        
    风险评估
    预测工具路径, 通过资产清点
        外部无法直接访问, NAT映射, 黑客可以通过弱口令

    安全策略
    1. 防御型
    1. 监控性
    目前不能自动化, 今年内实现
    
        

1. 精确的入侵检测

----

##具体功能
1. 安全管理->资产
1. 风险

    出问题的可能性
1. 威胁

    有人在实施攻击
1. 分析

    分析模型

###安装部署

系统设置> Agent安装
必要条件: 
1. 只支持Linux 64位, 但Linux的版本支持的很完整
    > Kali不支持
    > /etc/issue来判断
1. curl命令
1. 保证与我们服务器6677, 7788, 7789端口进行通讯
1. 没有平台依赖
1. 装agent的服务器必须可以解析console.qingteng.cn
1. 服务器时间必须同步
    > agent与server出现一定程度时差, 就会kill agent
    > 现已取消

> 资产清点与基于行为入侵检测, 需要环境全覆盖
内网安装:
1. danted, sock5
> danted不能在centos 7上运行
1. 可以与一台连接外网的机器联通, 可以通过这台机器连接外网

可agent主机:
1. 内网禁止ping则无法发现
1. 计算网段后限速ping

附加:
1. 查看安装log

----

###主机管理

安装之后, 主机在主机列表中出现

主机业务分组    |   filter
                |   主机列表

1. 主机会分成不同业务组 (游戏, 同性交友)
1. 业务组内分为不同角色 (负载均衡, web, db)
1. 角色下则可能有多台主机

- 用户访问会形成一个链状关系, 访问逻辑
- 角色之间互相依赖, 形成架构图
- 自适应于各种基础架构(windows, linux)
- 自适应于各种业务, 架构

> 过去都是外网, 不愿意去理解用户业务, 无法做到很好效果, 程度不高
> 我们贴合用户业务, 随着时间而更加理解业务
> 自身免疫系统

如何贴合用户业务
> agent从内部了解到所有信息
> 资产清点可以使用户定义他们的业务逻辑
> 根据这样的逻辑生成细节的安全策略 (不和逻辑的操作会暴露入侵路径)
> 根据用户业务逻辑来生成基于行为入侵检测的策略

角色设置:
- 通过业务进程, 角色的配置自动形成架构图
- 根据架构图自动整理防火墙策略(已取消, 但保持监控)
- 黑客无法得知用户业务逻辑, 走错一步就被监测到

----

###云主机适配

1. 青云, 阿里云可以通过api获取同账号的所有主机信息
1. 我们直接把agent封装在镜像里给客户
1. 可以绑定很多云平台帐号

----


****

#技术架构
1. agent

    收集信息, 执行策略
1. server

    系统大脑, 统一, 手机信息越多, 功能越强
    对接了第三方API(进/出)
        比如将不确定的进程发送给第三方鉴定程序
    1. 进
        第三方白名单黑名单
    1. 出
        恶意程序, 进行扫描
1. console

    情况, 报表

独特:

- agent c
- server erlang
- console php
1. agent有三种, 汇总到server进行观测, 三种agent完全协同, 产生非常完美的效果     (超融合)    Gartner分析师聊过

    > 没有一家公司把三种agent融会贯通
    > EDR(endpoint detection and reaction)
    > 美国两个安全领域

        1. IPS, 防火墙在衰减
        1. EDR增长
        1. MSSP, mana security servic provider
    > 防御, 检测, 分析, ?
    > 我们是EDR+MSSP, 提供的是服务, 产品用来支持服务
    > 唯一一个联动内部, 外部, 边界的产品
    1. 部署在服务器
    
        内部视角, 知道用户所有情况
        > 反向链接, 主动连接外网, 纯内网可以通过代理连外网
        > agent挂掉与agent无关
            1. 其他公司, 内核驱动, 不稳定会导致业务风险
            1. 不装内核驱动, 纯应用层
            1. 目前crontab, 以后agentgetaway与agent.
                1. agentgetaway, 云端收发数据, 加解密, 开源, 可加审计, 透明, 通过linux socket发送. 功能很单纯
                1. agent, 实际功能, 无网络能力
        安全问题
        1. 目前不多, 以后加强
            1. 解决本身提权问题

    2. 公司内只有几个, 也在服务器上, 变成流量分析, 旁路
    
        网络边界
        连接server
        1. 初期, 纯流量复制, 交换机原有的功能, portmirror, 无法对https, ftp进行加密
        2. 加入了应用层镜像, 流量到应用内部时 应用内部坐了分流
        
            nginx插件, 装在nginx里面, request与response都会正常使用, 但通过udp内网转发(进出的流量封装)
                - 不影响性能, 支持https, 旁路系统性能不会影响用户业务稳定性
        1. 
    3. 类似扫描器
    
        独立第三方

> 三个framework, 搭载各种模块, 插件式结构, 扩展性很强
> 3钟agent进行沟通: 1+3通过udp进行沟通, 2与3: 2采集流量, 给到3. 
>
    > 1+3 1发现端口对外开放, 给3在外部核实一遍
    > 2+3 SQL注入, 3在外部核实一遍
> so插入的每一个模块都能很好的与其他模块联动


安全技术: 从架构讲起+威胁情报


#2016-02-26 11:46 AM

##web观察

1. web站点
1. web后台
1. webapp
1. url清点
1. 服务器与site的对应关系(02.26下一周上线)

Web站点
1. agent识别特定进程(nginx, apache, tomcat - 目前三个 , jboss...), 分析正在运行的进程正在使用的活跃配置文件是哪一个. 
1. 分析配置文件内容, vhost (服务器, 端口, 服务器软件, 插件安装与否, 运行权限, webroot目录, 目录拥有者, 目录权限 )
- 以此扫描风险文件(是否存在, 端口是否可访问)
- 插件, 备份流量(http/https) , udp加密后发送
> [ 配置host而非域名, 端口没有对外, .... ] -> 不要加前提条件, 在渗透过程中可能前提条件并不可靠

Web后台
1. 所有登录接口积累到后台, 人工审核
1. 分析可被外部访问或只能内网访问
1. 自动识别弱口令

    - 传统, 通过类似暴力破解的方式, 主动式猜测弱口令
    - 我们, 分析流量, 筛选出帐号密码, 被动式检测弱口令

Web app
1. 清点webapp(版本号, url, 所在机器的内网ip/路径)
1. 扫描器只能做到最多30%

    - 爬虫的深度要考虑性能问题
    - 无法解决孤链

URL清点
- 一旦用户访问, 我们就会识别出接口(实时)
- 增量分析

1. 自动识别上传接口 (分析数据包)
1. 登录接口

    1. 识别url中的name
    1. 识别接口名字
    1. ....
1. 敏感信息, 哪些接口访问后会传回敏感信息

----

##进程管理

> linux进程名超过15个字, 会被截断. 并非是我们bug

1. 机器维度

    1. 扫描命令设置, 配置取得版本号的命令
    1. 必须存在进程设置, 比如有些性能监管的进程在所有机器上都应该存在
    1. 白名单进程

1. 进程维度

    1. 软件应用, 用了那些业务支持业务, 出现在analyse界面上 ( 根据进程名来进行匹配, 通过容器来进行的业务应用以前难以被识别出来, 已经被拆分出来了 )
    1. 危险进程, 就出黑名单进程

----

##端口清点

整个业务有哪些端口, 端口有哪些对外
> NAT环境下, 对外端口不准 ( 外网NAT映射功能解决次问题, 读取NAT映射表, 生成NAT映射表, 这样我们第三种agent可以通过映射后的端口在外部进行检测 )

1. 主机维度
1. 端口号维度

    - 15770->云盾
    - 9000->php
    - 3000->ruby
1. 进程维度

----

##帐号管理

1. 主机维度
1. 帐号维度

    - 弱口令通过字典匹配, 调用系统底层登录函数.
    - 速度灰常快~ 
    - 不会产生log(因为底层), 干净
    - 泄漏的口令可以加入字典, 从而知道影响范围

----

2016-02-26 01:05 PM

****

#2016-03-04 11:42 AM

##web攻击检测

Nginx, apache, 都有插件, 流量分流, 投递到第二种agent, 我们agent对其进行分析

XSS, SQL, 后门请求, 
> 来源于后台的正则匹配. module security默认规则. 现在在idc 36000个规则, 相当精确.

1. 暴力破解

    不考正则, 靠规则
    1. 登录, 如果其他字段都没改变, 只有密码在短时间之内变
    1. 如果SQL注入通过登录进行, 可能会被当作暴力破解

1. 后门上传

    1. 文件名判断是否为正则. cgi, 或者多后缀, 或者被截断. 会做一个alert.
    1. 文件内容是否符合代码规范, 如果符合可能是后门. 不是基于正则, 功能强大.
    1. 涂少: 阻止上传后的php文件执行, 待测

> SQL注入可以彻底被防止: 
> 目前是正则匹配, 最主流的waf也是这样
> 每个参数的值拿出来, 加上前缀, 形成一个完整sql语句. 用解析引擎执行, 如果是可执行, 就判断是SQL注入

用户选择
1. 前置: 检测引擎, mysql语法引擎匹配.
1. 后置: 代码语言与数据库成绩: 在数据库驱动中分析完整的SQL语句.

----

##web后门

根绝服务器配置文件中的根目录内容, 对根目录进行全局扫描: 正则
可以选择进行实时监控

把webshell投递给了virusbook做分析.

分析是否为值得关注的文件, 如php文件. 如果是触发inotify, 传给上层进行分析.

> 增量扫描: 修改时间与大小.

----

##反弹shell

1. bash的stdin, stdout绑定了socket, 会被报出来
1. bash的stdin, stdout绑定了...

> 很准很犀利

----

##操作审计

给bash进程打了补丁, 记录操作. 发送给agent做分析. 同时也在本地存储了一份. 每次agent同步时进行增量同步

设置威胁命令: 使用正则

登录用户是第一次登录的帐号, 而非su成为的用户

对许多关键命令, 如wget, curl进行了参数解析 ( 不止是http:// )

----

##登录日志

登录限制
1. 区域
1. ip
1. 时间

> 记录每一台服务器的运维人员, 异常登录是发送给服务器管理人员, 抄送安全人员.

----

##防暴力破解

目前监控sshd
1. iptables, 直接对iptables进行操作
1. tcp wrapper, 应用层, 

agent监控了agent登录日志. 新增一行就用正则进行匹配. 如果正确, 就检测是否符合正常登录. 如果满足一定规则 (5秒10次), 就进行报警.

1. 即将支持openvpn.
1. 也能支持私人系统 (zimbra)
> 很容易接入其他程序. 只要打入登录日志.

> 写死的日志路径是默认的. 如果没找到会根据进程写入的文件来寻找日志文件位置.

----

##隐藏功能

1. 查看/etc/passwd, /etc/shadow
1. 擦除日志
1. 本地提权

2016-03-04 11:42 AM

> analysis大改版
> web服务器风险扫描 
> 目前: (基线, 是否符合基线规范)
> 以后: 1. appspider 2. 漏洞, poc 

****

#历史





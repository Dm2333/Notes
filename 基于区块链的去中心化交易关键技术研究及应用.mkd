
#绪论

本文的主要工作有:

1. 以以太坊为例，深入学习区块链相关技术与概念，并对区 块链中的数据层和共识层深入探讨，并引出智能合约相关概念。 
2. 针对以太坊区块链基于工作量证明的共识机制在联盟链场 景下表现出的算力浪费的问题，本文提出采用 PBFT 共识算法，并针对该共识机制进行改进，通过设计区块生成协议并结合超时机制的方法，减少共识过程中的通信开销。
3. 根据联盟链的特点，提出对以太坊中账户存储优化方案，结合Merkle Patricia树的数据结构特点，对每笔交易涉及到的两个账户，找到账户地址的公共前缀后同时修改两个账户的内容，并采用K-means聚类算法将关联账户聚类，提高了交易执行过程中账户修改的效率
4. 对改进后的以太坊进行联盟链形式的区块链搭建，并开发实现了该平台下的去中心化任务发布系统，该系统中交易相关的操作由区块链完成

区块链从本质上看是一套分布式系统，通过共识机制和激励机制实现了系统的去中心化与安全可信。早期的区块链技术应用就是利用虚拟电子货币实现去中心化的交易。采用数字加密技术实现点对点的交易的基础上，将交易与时间戳一并写入到一个基于随机哈希工作量证明（Proof  of  Work， PoW）的区块中，将区块添加到一个无限延伸的链式结构中，并以激励机制鼓励全网共同维持该链正确的延伸下去[3][4][5][6]。区块链技术的产生打破了人们对传统交易的认识束缚，随着以太坊[7]开发出一套可以执行图灵完备的脚本语言的虚拟机，并引入智能合约的概念，在以太坊区块链中可以通过编写智能合约实现各种去中心化应用（Decentralized  Application，DApp），这也使得区块链的应用已经不仅仅局限于电子货币的交易，基于区块链的去中心化应用也推动着区块链技术应用于各行各业。

----

本论文的主要创新点有：

1. 在去中心化任务发布平台中，需要进行转账交易，实现赏金的功能。针对这类交易（类似于银行的转账交易），本文提出采用区块链技术搭建联盟链进行解决，并通过智能合约的方式代替第三方监管实现系统的联盟内去中心化。 
2. 由于以太坊中采用的PoW共识机制造成大量算力浪费，同时在联盟链节点少的情况下可能由于某节点计算能力强可以对区块链系统进行攻击，使系统不可信。因此本文认为PoW 共识机制不适用于联盟链中，因此本文提出基于PBFT以太坊共识机制，并修改区块校验方法，解决PoW共识机制在联盟链中的弊端。
3. 本文结合以太坊区块结构改进PBFT算法，提出将协商过程与执行过程进行分离，减少校验次数提高校验效率，同时结合以太坊区块生成协议，对PBFT算法中的检查点机制和视图切换协议进行更改，减少该算法在执行检查点检查和视图切换协议时的通信开销。
4. 本文针对以太坊状态树存储结构，提出改进账户存储方式，结合Merkle Patricia树对交易时账户修改过程提出交易账户同时修改算法，减少索引和哈希次数实现优化。根据上述算法提出关联账户的想法，通过聚类算法筛选出关联账户并放到同一父节点下，对账户的操作采用以交易的方式提交，同时修改交易双方账户，从而达到优化目的。

****

#区块链相关技术

##以太坊的相关概念

1. 数据层

    数据层封装了区块的数据结构和数据加密相关的内容。其中区块结构如图2-2所示。一个区块中分为区块头和区块体两个部分。在区块体中包括了所有的交易相关信息，而区块头中则包含了前一区块的哈希值、时间戳、随机数、难度系数和该区块中Merkle树[29][30]根哈希值，其中时间戳是区块的生成时间，随机数是数学难题的解，难度系数可以动态调整该数学难题的难度，Merkle树则是对该区块体中交易的唯一的标识。这些组成元素通过一定的哈希算法形成该区块的哈希值，区块之间通过区块中的parenthash和区块中的前一区块哈希值对应，并进行首尾相连，形成链式结构，并将从创世块开始所形成的最长的链称为主链。在向区块链中逐个添加区块的过程中，往往会因为网络延迟造成多个新的区块同时添加到主链产生分支的情况，这里就需要对难度系数的进行比较，以整条链中累计工作量最大的支链作为主链，继续进行区块的添加过程。区块头中的时间戳则保障了区块的有序性，对于篡改或伪造区块数据有一定的防范作用。难度系数是用于动态调整挖矿难度，维持出块时间在期望时间上下浮动，同时难度系数是工作量证明的验证依据

2. 网络层

    网络层中包括了P2P网络[34][35][36]的实现、消息传播机制和数据验证这三方面. 网络层是实现以太坊节点间交互的网络保障。以太坊采用P2P网络来解决以太坊中去中心化等特点，其网络模式如图2-4所示。P2P网络采用扁平式拓扑结构[37]，因此各个节点的地位相同，没有中心化服务器，每个节点都等同的参与以太坊系统中的路由、校验、广播等功能。 

3. 共识层和激励层

    在一个高度自治的去中心化分布式系统中，如何使各节点达成共识是以太坊的核心内容，也是分布式系统所面临的不可避免的问题。以太坊采用了基于工作量证明的共识机制，让一个决策权分散的系统达成一致。各个节点通过算力竞争解决一个数学难题，并对第一个解决出来的节点进行奖励，从而促进整个网络实现算力竞争。
    在以太坊中使用的工作量证明哈希函数是Ethash，该哈希算法已经被证明没有有效的办法进行逆向运算，只能通过尝试求解。每一次的挖矿过程首先根据区块头中的难度系数计算出一个目标值，然后对区块头中的信息和一个随机数进行哈希，得到的哈希值小于目标值则认为挖矿成功，该随机数则是这次运算的解。因为哈希算法的特点，所以每次输入即使只有一位不同也会造成哈希值差异很大，因此通过哈希算法的不可逆性使该求解过程只与计算机算力有关。该求解过程虽然会消耗大量算力，但是对解的验证却十分简单，只需要进行一次哈希运算后与目标值进行比较便可校验。而攻击者倘若想要伪造区块信息并添加到区块链中，则需要联合全网51%的算力来同时进行伪造，因此通过工作量证明的共识机制实现了以太坊一致性的问题
    基于PoW 共识机制首先需要网络中节点的总算力要足够大，这样才不会出现算力集中的情况，因此需要依靠激励机制来鼓励全网挖矿，这样才能维持全网算力总和足够大，保证以太坊的去中心化是安全可信的。与比特币相似，以太坊为了激励矿工挖矿向成功挖矿的矿工发放虚拟货币――以太币，以太币是流通于以太坊中的一种电子虚拟货币，矿工通过成功挖矿赚取以太币

4. 合约层

    合约层主要包括脚本语言和执行脚本语言的虚拟机[38]。以太坊中可以运行图灵完备的脚本语言，因此可以通过编写复杂的智能合约实现去中心化应用。合约层是区块链实现去中心化应用的必要条件。其中智能合约是一种编码，在合约中有着可以自动运行的业务逻辑，并依靠以太坊虚拟机进行执行。

----

##共识机制

分布式系统中，最重要的就是节点间的共识问题。以太坊采用了基于工作量证明的共识机制，该机制提供了一种解决去中心化系统中各节点如何达成一致的问题。然而该机制需要依靠大量的算力来保证共识，造成大量的算力资源浪费，人们正在寻找更好的替代机制实现区块链各节点达成一致问题。

1. POW

    作为区块链技术的开创者比特币使用的共识机制就是基于工作量证明的共识机制，并且这一机制在其他公链环境下的区块链系统中也得到广泛应用。
1. POS
2. DPOS
3. 拜占庭共识机制

----

##智能合约相关技术

区块链技术通过其网络架构和其实现的虚拟电子货币简化了价值转移过程。在区块链中，一笔交易分为以下三步：

1. 向区块链网络中发送一条消息，并在消息中定义了一笔交易
2. 通过广播接受该交易表明 B 接受该交易
3. 区块链网络中的参与者验证这笔交易的合法性并完成交易

可以肯定的是这种交易模式定义了基于区块链中某种货币的所有者发生了改变的过程。但是当发送或者接受交易时，也可以传递消息内的价值，就像电子信封一样，在电子信封中或许会包含电子货币并通过网络传递，但也可以传递一些其他的信息，实现附加的效用

一个典型的交易可以看作一个简单“脚本”，这个脚本相当于一组指令集，这些指令集让区块链中节点执行交易。然而当脚本发生改变，并包含交易以外的信息，那么用户就可以利用这个脚本实现复杂的“交易”。智能合约是一个方便、可验证、可执行的商业协议条款的计算机协议，这个概念并不是新的概念，也不是区块链所提出来的。区块链实现的是智能合约的去中心化，换句话说智能合约是基于一个安全公开账本并没有中心化监管执行的合约。参与者可以在没有第三方监管的前提下，自动履行合约内容。智能合约也是区块链中实现去中心化应用的基础。

在以太坊中，智能合约[43][44]是由二进制字节码组成，可以通以太坊中推荐的Solidity语言进行编写后通过编译生成二进制字节码存储于区块中。Solidity是一种合约语言，类似于Java Script的高级语言，在以太坊中可以调用Solidity语言编译器编译合约。 

在以太坊中智能合约是代码和数据的集合，并以智能合约账户地址存储于以太坊区块链中。前文提到过，智能合约以消息的形式在网络中传递，以太坊中智能合约存放于交易之中。EVM通过一笔交易是否含有代码来判断是否是合约类型的交易，如果一笔交易中的信息是代码则会执行该合约。执行过程中发现合约账户是NULL则会为该合约创建合约地址，并将合约写入到该账户下。EVM通过执行合约中的二进制字节码实现合约的执行。在以太坊智能合约定义了应用二进制接口（Application  Binary  Interface，ABI）是强类型的，ABI将在智能合约编译过程中形成并持久化。在这里ABI类似于现实合约中的条例，是每次合约调用时必须获得的。一个函数调用数据的前四个字节指定了要调用的函数。账户通过智能合约ABI进行合约中的方法调用。

****

#改进PBFT的以太坊共识机制及实现


****

#

****

#去中心化任务发布系统的实现

本章将使用改进PBFT作为共识机制的以太坊搭建联盟链，并以任务发布平台作为应用场景，其中任务发布平台中的账户之间的交易通过区块链中智能合约执行，并由区块链维护账户信息，实现去中心化。

##系统架构及需求分析

本文要实现去中心化的任务发布平台，其中赏金流动采用智能合约控制，实现去中心化。该平台的系统架构如图5-1所示。任务发布平台采用B/S架构，每一个联盟体的用户与其Web服务器进行交互，而以太坊节点服务器提供Web Service接口，以太坊节点服务器以联盟链形式链接，实现联盟间去中心化。 

各个联盟通过协商确定每个联盟体允许运行的以太坊节点个数，因为节点个数不同会对区块决策时的权重有影响，通过联盟各自维护属于自己的以太坊节点，参与区块链的维护过程，实现整个以太坊网络的去中心化，进而实现区块链平台的去中心化应用。其中对于Web服务器来说，以太坊节点服务器与传统数据库的功能类似，提供Web服务器所需要的数据，不同的是，以太坊中账户信息是去中心化存储的，并没有一个管理者可以管理所有的账户，而是由联盟中所有节点共同管理。

----

##需求分析

该系统主要实现任务发布系统的去中心化执行，因此联盟中各群体之间不需要建立相互信任，且不需要第三方进行监管执行。该系统主要功能实现任务发布、接受和删除任务的去中心化执行，并根据任务的执行情况，对任务赏金实现流通，

任务发布方将任务发布后，任务接收方可以看到任务的相关内容与赏金，任务接收方可以选择是否接受任务，当任务接收方完成任务会发出完成任务的通知，并传递给任务发布方，任务发布方会确认任务完成，并反馈给系统任务是否完成，从而实现一次任务发布。当发布交易的时候会从任务发布者账户中扣除赏金，当任务完成时将赏金转移到任务接受者账户中，当任务发布者取消任务，赏金会转回发布者账户中。同时对于超时的任务采取自动删除，并在区块链中同步该消息。整个过程中赏金的流动都在区块链中各个账户之间，每一笔任务发布都可以看做是账户之间交易的过程。

同时作为联盟中每一个联盟体，都需要对其维护的以太坊节点进行检测，因此需要以太坊提供检测指标相关的接口，其中包括对该节点区块链中的区块查询、账户信息查询以及当前区块链中的活跃节点信息，同时在系统初始化时需要进行数据迁移的相关工作，因此需要提供账户批量导入的功能。

----

##智能合约开发介绍

以太坊中可以运行图灵完备的脚本语言，这是以太坊实现去中心化应用的核心技术。在以太坊中，开发智能合约的语言有四种，分别是Serpent、Solidity、Mutan和LLL，其中Serpent受Python语言启发，Solidity受Java Script语言启发，Mutan受Go语言启发，而LLL则受Liso语言启发，这些语言都是为了面向合约编程而从底层开始设计的语言。其中，Solidity是以太坊智能合约开发的首选语言，Solidity内置了Serpent语言的所有特性，但语法规则却类似于Java Script，因此上手容易，逐渐的成为以太坊中智能合约开发使用量最大的一种语言。Solidity是一种面向对象静态类型的语言，其语法和一般面向对象语言类似。Solidity的语言特性比较少，这也是为了更好的开发出安全的智能合约所做出的牺牲。

....

----

##去中心化任务发布平台实现

本小节根据改进以太坊搭建8节点联盟链，模拟8个联盟体组成的公共账本，并实现基于该账本的任务发布平台。其中以太坊中接口采用Web Service接口，Web服务端则采用Http请求，并结合智能合约共同实现去中心化任务发布平台。

###以太坊接口开发

由于以太坊中只提供了Json-RPC调用接口，因此需要对以太坊编写Web Service接口，实现与Web服务器的交互过程，其中接口管理信息如表5-1所示。 

在智能合约模块中，同样需要开放Web Service接口，开放Web服务器调用智能合约的相关接口。其中接口说明如表 5-2所示。
 





